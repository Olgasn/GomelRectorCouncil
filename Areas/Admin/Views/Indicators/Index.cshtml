@model GomelRectorCouncil.Areas.Admin.ViewModels.IndicatorsViewModel

@{
    ViewData["Title"] = "Показатели";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" language="javascript">
    fireSubmit = function (event) {
                document.forms["searchForm"].enableForDownloading="0"
                document.forms["searchForm"].submit();
            }

</script>
<h2>Показатели для подведения итогов </h2>
<form name="searchForm" method="post">
    <input type="hidden" id="enableForDownloading" name="enableForDownloading" value="1"/>

    <div class="form-inline form-group">
        <label class="col-md-2 control-label">Год</label>
            <div class="col-md-10">
                @Html.DropDownList("currentYear", Model.ListYears as SelectList,
                htmlAttributes: new { @class = "form-control", onchange = "fireSubmit(event)" })                
                Запретить изменения
                @Html.CheckBox("disableForEdition", true, htmlAttributes: new { @class = "form-control", onchange = "fireSubmit(event)"})
                <input name="download" type="submit" value="Загрузить показатели университетам" class="btn btn-default" />


            </div>

    </div>
</form>
<p>
    <a asp-action="Create" class="col-md-2 control-label" asp-route-id="@Model.ListYears.SelectedValue">Добавить</a>
</p>



<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Indicators.FirstOrDefault().IndicatorId1)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Indicators.FirstOrDefault().IndicatorId2)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Indicators.FirstOrDefault().IndicatorId3)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Indicators.FirstOrDefault().IndicatorName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Indicators.FirstOrDefault().IndicatorUnit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Indicators.FirstOrDefault().IndicatorType)
                </th>
                
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Indicators) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IndicatorId1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IndicatorId2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IndicatorId3)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IndicatorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IndicatorUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IndicatorType)
            </td>
           

            <td>
                @if (Model.EnableForEdition)
                {
                    <a asp-action="Edit" asp-route-id="@item.IndicatorId">Изменить</a>
                    <a asp-action = "Delete" asp-route-id = "@item.IndicatorId" > Удалить </a>
                }
                <a asp-action="Details" asp-route-id="@item.IndicatorId">Подробно</a>
            </td>
        </tr>
}
    </tbody>
</table>
